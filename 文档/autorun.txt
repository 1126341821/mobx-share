当你想创建一个响应式函数，而该函数永远不会有观察者时,可以使用 mobx.autorun。 
当使用 autorun 时:
    所提供的函数总是立即被触发一次，然后每次它的依赖关系改变时会再次被触发。 
computed(function):
    创建的函数只有当它有自己的观察者时才会重新计算，否则它的值会被认为是不相关的。 
经验法则：
    如果你有一个函数应该自动运行，但不会产生一个新的值，请使用autorun。
    其余情况都应该使用 computed。 
Autoruns 是关于 启动效果 (initiating effects) 的 ，而不是产生新的值。 
如果字符串作为第一个参数传递给 autorun ，它将被用作调试名。

传递给 autorun 的函数在调用后将接收一个参数，即当前 reaction(autorun)，可用于在执行期间清理 autorun。
var numbers = observable([1,2,3]);
var numbers2 = observable([4,5,6]);
var sum = computed(() => numbers.reduce((a, b) => a + b, 0));

var disposer = autorun(() => console.log(numbers2));// 不会调用，没有修改numbers2
// var disposer = autorun(() => console.log(sum.get()));
// 输出 '6'
numbers.push(4);
// 输出 '10'

disposer();// 在此处💰调用将计算之前的，只要你修改sum就会调用她
numbers.push(5);
// 不会再输出任何值。`sum` 不会再重新计算。